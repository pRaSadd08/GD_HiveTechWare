{"ast":null,"code":"import initialState from \"../store/initialState\";\nimport * as Actions from \"./actions\";\nexport const CartsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.carts;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case Actions.FETCH_CARTS:\n      return {\n        ...state,\n        results: action.payload.carts,\n        totalPrice: getTotalCartPrice(action.payload.carts),\n        totalCart: action.payload.carts.length,\n        totalCartItems: getTotalCartItems(action.payload.carts)\n      };\n    case Actions.ADD_CART:\n      const newAddedCarts = [...state.results, action.payload.cart];\n      return {\n        ...state,\n        results: newAddedCarts,\n        totalPrice: getTotalCartPrice(newAddedCarts),\n        totalCart: newAddedCarts.length,\n        totalCartItems: getTotalCartItems(newAddedCarts)\n      };\n    case Actions.UPDATE_CART:\n      const prevCarts = state.results;\n      const newUpdatedCarts = prevCarts.map(cart => {\n        if (cart.id === action.payload.cart.id) {\n          cart.quantity = action.payload.cart.quantity;\n          cart.total_price = action.payload.cart.quantity * cart.product.price;\n        }\n        return cart;\n      });\n      return {\n        ...state,\n        results: newUpdatedCarts,\n        totalPrice: getTotalCartPrice(newUpdatedCarts),\n        totalCart: newUpdatedCarts.length,\n        totalCartItems: getTotalCartItems(newUpdatedCarts)\n      };\n    case Actions.REMOVE_CART:\n      const newRemovedCarts = state.results.filter(cart => cart.id !== action.payload.cartId);\n      return {\n        ...state,\n        results: newRemovedCarts,\n        totalPrice: getTotalCartPrice(newRemovedCarts),\n        totalCart: newRemovedCarts.length,\n        totalCartItems: getTotalCartItems(newRemovedCarts)\n      };\n    case Actions.CLEAR_CARTS:\n      return {\n        ...state,\n        results: [],\n        totalPrice: 0,\n        totalCart: 0,\n        totalCartItems: 0\n      };\n    default:\n      return state;\n  }\n};\n_c = CartsReducer;\nconst getTotalCartPrice = carts => {\n  if (carts.length > 0) {\n    const totalPrice = carts.reduce((prev, cur) => prev + cur.total_price, 0);\n    return +totalPrice.toFixed(2);\n  }\n  return 0;\n};\nconst getTotalCartItems = carts => {\n  if (carts.length > 0) {\n    const totalCartItems = carts.reduce((prev, cur) => prev + cur.quantity, 0);\n    return totalCartItems;\n  }\n  return 0;\n};\nvar _c;\n$RefreshReg$(_c, \"CartsReducer\");","map":{"version":3,"names":["initialState","Actions","CartsReducer","state","arguments","length","undefined","carts","action","type","FETCH_CARTS","results","payload","totalPrice","getTotalCartPrice","totalCart","totalCartItems","getTotalCartItems","ADD_CART","newAddedCarts","cart","UPDATE_CART","prevCarts","newUpdatedCarts","map","id","quantity","total_price","product","price","REMOVE_CART","newRemovedCarts","filter","cartId","CLEAR_CARTS","_c","reduce","prev","cur","toFixed","$RefreshReg$"],"sources":["/Users/techi.s./Desktop/Hive-Front/hive-front/src/reducks/cart/reducers.js"],"sourcesContent":["import initialState from \"../store/initialState\";\nimport * as Actions from \"./actions\";\n\nexport const CartsReducer = (state = initialState.carts, action) => {\n\tswitch (action.type) {\n\t\tcase Actions.FETCH_CARTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresults: action.payload.carts,\n\t\t\t\ttotalPrice: getTotalCartPrice(action.payload.carts),\n\t\t\t\ttotalCart: action.payload.carts.length,\n\t\t\t\ttotalCartItems: getTotalCartItems(action.payload.carts),\n\t\t\t};\n\n\t\tcase Actions.ADD_CART:\n\t\t\tconst newAddedCarts = [...state.results, action.payload.cart];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresults: newAddedCarts,\n\t\t\t\ttotalPrice: getTotalCartPrice(newAddedCarts),\n\t\t\t\ttotalCart: newAddedCarts.length,\n\t\t\t\ttotalCartItems: getTotalCartItems(newAddedCarts),\n\t\t\t};\n\n\t\tcase Actions.UPDATE_CART:\n\t\t\tconst prevCarts = state.results;\n\t\t\tconst newUpdatedCarts = prevCarts.map((cart) => {\n\t\t\t\tif (cart.id === action.payload.cart.id) {\n\t\t\t\t\tcart.quantity = action.payload.cart.quantity;\n\t\t\t\t\tcart.total_price = action.payload.cart.quantity * cart.product.price;\n\t\t\t\t}\n\t\t\t\treturn cart;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresults: newUpdatedCarts,\n\t\t\t\ttotalPrice: getTotalCartPrice(newUpdatedCarts),\n\t\t\t\ttotalCart: newUpdatedCarts.length,\n\t\t\t\ttotalCartItems: getTotalCartItems(newUpdatedCarts),\n\t\t\t};\n\t\tcase Actions.REMOVE_CART:\n\t\t\tconst newRemovedCarts = state.results.filter((cart) => cart.id !== action.payload.cartId);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresults: newRemovedCarts,\n\t\t\t\ttotalPrice: getTotalCartPrice(newRemovedCarts),\n\t\t\t\ttotalCart: newRemovedCarts.length,\n\t\t\t\ttotalCartItems: getTotalCartItems(newRemovedCarts),\n\t\t\t};\n\t\tcase Actions.CLEAR_CARTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresults: [],\n\t\t\t\ttotalPrice: 0,\n\t\t\t\ttotalCart: 0,\n\t\t\t\ttotalCartItems: 0,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst getTotalCartPrice = (carts) => {\n\tif (carts.length > 0) {\n\t\tconst totalPrice = carts.reduce((prev, cur) => prev + cur.total_price, 0);\n\t\treturn +totalPrice.toFixed(2);\n\t}\n\treturn 0;\n};\n\nconst getTotalCartItems = (carts) => {\n\tif (carts.length > 0) {\n\t\tconst totalCartItems = carts.reduce((prev, cur) => prev + cur.quantity, 0);\n\t\treturn totalCartItems;\n\t}\n\treturn 0;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}